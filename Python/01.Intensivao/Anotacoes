 -- aula 1 -- Python

 Usar o Jupyter como editor

 a primeira coisa que devemos fazer é escrever o passo a passo do que quero em português

 pyautogui --> biblioteca que permite controlar o mouse, teclado e tela do pc
 pandas --> 

 precisamos instalar o pyautogui: !pip install pyautogui
depois, vamos apenas importar "import pyautogui"
.click - mouse
.press - pressionar 1 única tecla
.hotkey - atalho -> conjunto de teclas ex: pyautogui.hotkey("ctrl", "t")
.write - escreve um texto

 Abrir aba do navegador
 Escrever o link que quero acessar
 dar enter para entrar no link

pyautogui.PAUSE = 1 estou alterando a config do python para que a cada comando tenha uma pausa de 1 segundo (no python os comandos podem ultrapassar uns aos outros)

o pyautoguitem uma limitação de caracteres especiais - utilizar pyperclip
geralmente só é usado o pyperclip.copy

importar biblioteca time para poder pausar no meio do código, exemplo: time.sleep(5) 

 para descobrir a posição devemos usar o pyautogui.position() - utiizando o time.sleep conseguimos trocar de sheet ou algo do tipo e pegarmos a posição
 usar o "r" antes do texto que vc vai utilizar é importante para que o python não entenda como comando e sim como texto
 esse "r" vem de raw = crú

 no comando de pd.read_excel você pode colocar um parametro pra ler determinada sheeet que vc queira
 para escrever um texto mais complexo, usar três aspas (pode ser simples ou duplas)
  '  """ ou '''


 para imprimir o texto com a variável no meio automatizada, usar antes das aspas triplas o "f", de "format", assim vai vir o valor da variável
 a variável tem que ser escrita entre { chaves }
ex: Valor de faturamento: {faturamento} --> vai imprimir o valor da variável

-- aula 2 -- python

sempre lembrar que no python toda informação que não te serve, te atrapalha

pra importar uma tabela no pyhton, a gente cria uma variável e aí tudo o que formos fazer com a base, é com a variável na vdd
pra dropar linhas ou coluna, sempre temos que passar o nome da linha/coluna e o código de eixo --> quando é linha, o código =0, quando é coluna, o código =1
exe: tabela = tabela.drop("unamed:0", axis=1) --> dentro da base "tabela" dropar a coluna (axis=1) com o nome "unamed:0"

TRATAMENTO DE DADOS
Primeiro pensar se o python está realmente reconhecendo o tipo certo de cada dado na tabela
obs: valores vazios no python são indicados como NaN

comando print(tabela(info))
com isso tenho um detalhe completo da tabela, linhas, tipos e etc

transformar coluna de texto em numérico:
tabela["coluna1"] = pd.to_numeric(tabela["coluna1"], errors="coerce")
    o comando coerce faz com que os dados que não seguem o parâmetro pra conversão de numérico (os inválidos serão considerados NaN)

deletar valores vazios: tabela.dropna() --> já faz automaticamente
  colunas completamente vazias: tabela.dropna(how="all", axis=1)
  linhas com pelo menos 1 valor vazio: tabela.dropna(how="any", axis=0)

bibliotecas para gráficos dentro do python
    matplotlib
    seaborn
    plotly (plotly.express)

sempre trabalhar com dois momentos para gráficos 1. criar; 2. mostrar
    histograma
    

-- aula 3 --
vamos utilizar o pacote selenium (precisa instalar) - construído para automações na web
temos que fazer o download do chromedriver

comando send_keys é para escrever









